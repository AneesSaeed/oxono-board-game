# Identifiant du projet.
# Doit Ãªtre unique dans lâinstance SonarQube.
# Obligatoire
sonar.projectKey=oxono-java

# Nom du projet tel quâil apparaÃ®tra dans lâinterface web.
# Obligatoire
sonar.projectName=Oxono project

# Permet de suivre l'Ã©volution de la qualitÃ© entre diffÃ©rentes versions
# Facultatif
sonar.projectVersion=1.0

# RÃ©pertoire de base du projet
# Par dÃ©faut SonarScanner utilise le dossier oÃ¹ il est exÃ©cutÃ©.
# Facultatif
sonar.projectBaseDir=.

# SpÃ©cifie oÃ¹ se trouvent les fichiers source Ã  analyser.
# Obligatoire
sonar.sources=src/main/java

# RÃ©pertoire contenant les fichiers de bytecode compilÃ©s (.class)
# Obligatoire pour Java. SonarQube a besoin des fichiers 
# compilÃ©s pour effectuer certaines analyses (comme la dÃ©tection 
# des problÃ¨mes de type ou de complexitÃ© cyclomatique).
sonar.java.binaries=target/classes

# RÃ©pertoires contenant les tests unitaires.
# NÃ©cessaire si on veut inclure les rÃ©sultats des tests.
sonar.tests=src/test/java


# SpÃ©cifie l'emplacement des rapports JUnit pour SonarQube.
# NÃ©cessaire si on veut inclure les rÃ©sultats des tests.
sonar.junit.reportPaths=target/surefire-reports

# Rapport de couverture des tests
# Obligatoire si on veut suivre la couverture des tests unitaires.
sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
